{
    "swagger": "2.0",
    "info": {
        "description": "This is a simples application to create accounts and transfers between valide accounts",
        "title": "stoneBanking API",
        "contact": {
            "name": "API Support",
            "email": "vitorinomuller@gmail.com"
        },
        "license": {
            "name": "Stone CoÂ®."
        },
        "version": "1.0"
    },
    "host": "localhost:8000",
    "paths": {
        "/accounts": {
            "get": {
                "description": "Get all accounts actually in the system",
                "produces": [
                    "application/json"
                ],
                "summary": "Get All Accounts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/output.AccountOutputVO"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.OutputError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.OutputError"
                        }
                    }
                }
            },
            "post": {
                "description": "With the data received, validate her and if all is correct, and don't exist a account with that document, create a new account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a account",
                "parameters": [
                    {
                        "description": "Account Creation Data",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input.CreateAccountVO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/output.AccountOutputVO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.OutputError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.OutputError"
                        }
                    }
                }
            }
        },
        "/accounts/{account_id}/balance": {
            "get": {
                "description": "With a authorization token valid, return the balance of a account",
                "produces": [
                    "application/json"
                ],
                "summary": "Get the balance of a account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Token",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/output.AccountBalanceVO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.OutputError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.OutputError"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "With the data received, validate if is correct, and log the user, returning a token of authorization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Log in the account",
                "parameters": [
                    {
                        "description": "Account Login Data",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input.LoginVO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/output.LoginOutputVO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.OutputError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.OutputError"
                        }
                    }
                }
            }
        },
        "/transfers": {
            "get": {
                "description": "With a valid Authorization Token, get all the transfers that has made or received by the account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get all transfers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Token",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/output.TransferOutputVO"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.OutputError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.OutputError"
                        }
                    }
                }
            },
            "post": {
                "description": "With the data received, validate her and if all is correct, create a new transfer, and update the balance of accounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a transfer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Token",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Transfer Creation Data",
                        "name": "transfer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/input.CreateTransferVO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/output.TransferOutputVO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.OutputError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.OutputError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "input.CreateAccountVO": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "integer",
                    "example": 1000
                },
                "cpf": {
                    "type": "string",
                    "example": "600.246.058-67"
                },
                "name": {
                    "type": "string",
                    "example": "JoÃ£o da Silva"
                },
                "secret": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "input.CreateTransferVO": {
            "type": "object",
            "properties": {
                "account_destination_id": {
                    "type": "string",
                    "example": "3"
                },
                "account_origin_id": {
                    "type": "string",
                    "example": "2"
                },
                "amount": {
                    "type": "integer",
                    "example": 1000
                }
            }
        },
        "input.LoginVO": {
            "type": "object",
            "properties": {
                "cpf": {
                    "type": "string",
                    "example": "600.246.058-67"
                },
                "secret": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "output.AccountBalanceVO": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number",
                    "example": 12.34
                }
            }
        },
        "output.AccountOutputVO": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number",
                    "example": 10
                },
                "cpf": {
                    "type": "string",
                    "example": "600.246.058-67"
                },
                "created_at": {
                    "type": "string",
                    "example": "12/05/2021 00:01:01"
                },
                "id": {
                    "type": "string",
                    "example": "123"
                },
                "name": {
                    "type": "string",
                    "example": "JoÃ£o da Silva"
                }
            }
        },
        "output.LoginOutputVO": {
            "type": "object",
            "properties": {
                "authorization": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                }
            }
        },
        "output.TransferOutputVO": {
            "type": "object",
            "properties": {
                "account_destination_id": {
                    "type": "string",
                    "example": "bf89f445-70d3-442f-9821-55699a868704"
                },
                "account_origin_id": {
                    "type": "string",
                    "example": "bf89f445-70d3-442f-9821-55699a868704"
                },
                "created_at": {
                    "type": "string",
                    "example": "12/05/2021 00:01:01"
                },
                "id": {
                    "type": "string",
                    "example": "bf89f445-70d3-442f-9821-55699a868704"
                },
                "value": {
                    "type": "number",
                    "example": 123.32
                }
            }
        },
        "response.OutputError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "error"
                }
            }
        }
    }
}